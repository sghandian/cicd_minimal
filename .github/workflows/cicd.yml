#Create a name for the entire workflow for lookup in dockerhub
name: CI/CD for Minimal Dockerized Flask App 

#Define the events that would trigger this workflow
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


jobs:
  build-and-test: #unit testing
    runs-on: ubuntu-latest #container

    steps:
      #checks out code from repo
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      #could also do pip install -r requirements.txt
      run: |
        python -m pip install --upgrade pip
        pip install flask
        pip install pytest

    - name: Run tests
      run: |
        pytest


  build-and-publish:
    #require that this job must be run after build-and-test was successful
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Dockerhub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      #this is an already provided docker action by GitHub
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./DockerFile
        push: true
        #naming convention has to be USERNAME/name-of-app:version
        tags: ${{ secrets. DOCKER_USERNAME }}/flasktest-app:latest

    - name: Image digest
      run: echo ${{ steps.build-and-publish.outputs.digest }}

  